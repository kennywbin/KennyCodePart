using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Diagnostics;

namespace ExecuteCMD
{
    public partial class FrmMain : Form
    {
        public FrmMain()
        {
            InitializeComponent();
        }

        private void btn_Create_Click(object sender, EventArgs e)
        {
            try
            {
                //创建一个进程
                Process p = new Process();
                p.StartInfo.FileName = "cmd.exe";
                p.StartInfo.UseShellExecute = false;//是否使用操作系统shell启动
                p.StartInfo.RedirectStandardInput = true;//接受来自调用程序的输入信息
                p.StartInfo.RedirectStandardOutput = true;//由调用程序获取输出信息
                p.StartInfo.RedirectStandardError = true;//重定向标准错误输出
                p.StartInfo.CreateNoWindow = true;//不显示程序窗口
                p.Start();//启动程序

                string strCMD = "\"" + @"C:\Program Files (x86)\Microsoft SDKs\Windows\v8.0A\bin\NETFX 4.0 Tools\SvcUtil.exe" + "\"  " + this.txt_URL.Text.ToString().Trim()
                    + " /r:"+"\""+@"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.0\System.Data.dll" +"\""+ " /syncOnly";
                //向cmd窗口发送输入信息
                p.StandardInput.WriteLine(strCMD + "&exit");

                p.StandardInput.AutoFlush = true;

                //获取cmd窗口的输出信息
                string output = p.StandardOutput.ReadToEnd();
                //等待程序执行完退出进程
                p.WaitForExit();
                p.Close();


                MessageBox.Show(output);
                Console.WriteLine(output);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message + "\r\n跟踪;" + ex.StackTrace);
            }
        }
    }
}

http://blog.csdn.net/black_yu/article/details/70185494

https://www.cnblogs.com/vaevvaev/p/7115721.html

https://www.cnblogs.com/masonlu/p/6628324.html

https://www.cnblogs.com/yqskj/articles/2050922.html

https://stackoverflow.com/questions/6511380/how-do-i-build-a-solution-programmatically-in-c

https://docs.microsoft.com/en-us/dotnet/api/?redirectedfrom=MSDN

https://www.cnblogs.com/HQFZ/p/5731894.html

https://stackoverflow.com/questions/25494344/building-c-sharp-solution-in-release-mode-using-msbuild-exe

MSBuild is the build tool for Microsoft Visual Studio.  Developers use MSBuild to build a Visual Studio project or solution file from a command line, batch file, build tool, or automated script. 
A new version of MSBuild.exe is included with each version of the .NET Framework stored in “%WinDir%Microsoft.NETFramework” on your Windows PC.  The MSBuild.exe path depends on the .NET Framework version used to build your project.  Typically you will want to call the most recent version of MSBuild.exe installed on your computer:
.NET v2.0: 
%WinDir%Microsoft.NETFrameworkv2.0.50727MSBuild.exe
.NET v3.5: 
%WinDir%Microsoft.NETFrameworkv3.5MSBuild.exe
.NET v4.0: 
%WinDir%Microsoft.NETFrameworkv4.0.30319MSBuild.exe


@echo off
echo 建立日期 %date%
echo 建立日期 %date%>build.log
"C:\Program Files\Microsoft Visual Studio 10.0\Common7\IDE\devenv.exe" 解决方案名.sln  /project 项目名称 /rebuild RELEASE /out output.log
type output.log>>build.log
echo 完成构建
echo 完成构建>>build.log
start notepad build.log
